<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lix.mapper.YearreportforinvsMapper">
  <resultMap id="BaseResultMap" type="com.lix.domain.Yearreportforinvs">
    <result column="ancheid" jdbcType="VARCHAR" property="ancheid" />
    <result column="creditno" jdbcType="VARCHAR" property="creditno" />
    <result column="entname" jdbcType="VARCHAR" property="entname" />
    <result column="regno" jdbcType="VARCHAR" property="regno" />
    <result column="target" jdbcType="VARCHAR" property="target" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ancheid, creditno, entname, regno, target
  </sql>
  <select id="selectByExample" parameterType="com.lix.domain.YearreportforinvsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yearreportforinvs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.lix.domain.YearreportforinvsExample">
    delete from yearreportforinvs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lix.domain.Yearreportforinvs">
    insert into yearreportforinvs (ancheid, creditno, entname, 
      regno, target)
    values (#{ancheid,jdbcType=VARCHAR}, #{creditno,jdbcType=VARCHAR}, #{entname,jdbcType=VARCHAR}, 
      #{regno,jdbcType=VARCHAR}, #{target,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lix.domain.Yearreportforinvs">
    insert into yearreportforinvs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ancheid != null">
        ancheid,
      </if>
      <if test="creditno != null">
        creditno,
      </if>
      <if test="entname != null">
        entname,
      </if>
      <if test="regno != null">
        regno,
      </if>
      <if test="target != null">
        target,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ancheid != null">
        #{ancheid,jdbcType=VARCHAR},
      </if>
      <if test="creditno != null">
        #{creditno,jdbcType=VARCHAR},
      </if>
      <if test="entname != null">
        #{entname,jdbcType=VARCHAR},
      </if>
      <if test="regno != null">
        #{regno,jdbcType=VARCHAR},
      </if>
      <if test="target != null">
        #{target,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lix.domain.YearreportforinvsExample" resultType="java.lang.Long">
    select count(*) from yearreportforinvs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update yearreportforinvs
    <set>
      <if test="record.ancheid != null">
        ancheid = #{record.ancheid,jdbcType=VARCHAR},
      </if>
      <if test="record.creditno != null">
        creditno = #{record.creditno,jdbcType=VARCHAR},
      </if>
      <if test="record.entname != null">
        entname = #{record.entname,jdbcType=VARCHAR},
      </if>
      <if test="record.regno != null">
        regno = #{record.regno,jdbcType=VARCHAR},
      </if>
      <if test="record.target != null">
        target = #{record.target,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update yearreportforinvs
    set ancheid = #{record.ancheid,jdbcType=VARCHAR},
      creditno = #{record.creditno,jdbcType=VARCHAR},
      entname = #{record.entname,jdbcType=VARCHAR},
      regno = #{record.regno,jdbcType=VARCHAR},
      target = #{record.target,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>